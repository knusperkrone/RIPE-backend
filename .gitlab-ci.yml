#Hier werden yml-Dateien, bspw. aus anderen Repositories importiert, um sie in der eigenen Pipeline zu nutzen.
include:
  - project: "IF/pipeline-templates"
    file: "general/cache.yml"
  - project: "IF/pipeline-templates"
    file: "general/stages.yml"
  - project: "IF/pipeline-templates"
    file: "general/variables.yml"
  - project: "IF/pipeline-templates"
    file: "job-templates/build-docker.yml"
  - project: "IF/pipeline-templates"
    file: "job-templates/codequality.yml"
  - project: "IF/pipeline-templates"
    file: "job-templates/compile-maven.yml"
  - project: "IF/pipeline-templates"
    file: "job-templates/deploy.yml"
  - project: "IF/pipeline-templates"
    file: "job-templates/test.yml"
  - project: "IF/pipeline-templates"
    file: "job-templates/trigger-other-pipelines.yml"

.prepare-docker-build: &prepare-docker-build
  before_script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]

build-application:
  # Erbt von .build-application, definiert in IF/pipeline-templates:job-templates/build-docker.yml
  extends: .build-application
  variables:
    DOCKERFILE_PATH: "Dockerfile  --cache=true"

deploy-integration:
  stage: integration
  extends: .deploy-integration
  dependencies:
    - build-application
  only:
    - master
